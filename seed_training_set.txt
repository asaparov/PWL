: # Cats are mammals.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_plural,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_plural,try_remove_adv,require_no_correlator_predicative,require_predicative_universal
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(N:require_no_correlator_predicative,select_predicate_in_set "cat"/"Cats")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"are")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(NP':try_add_plural,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_wide_scope,require_no_string_or_number_or_name_in_set
							(NOMINAL_R:identity_predicative
								(NOMINAL_L:identity_predicative
									(N:require_no_correlator_predicative,select_predicate_in_set "mammal"/"mammals")
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
#	{![x]:((U(0,x) & cat(x)) => ?[s]:((arg1(s)=x) & U(1,s) & same(s) & present(s) & ?[m]:(U(2,m) & mammal(m) & (arg2(s)=m))))};
	{![x]:(cat(x) => ?[m]:(mammal(m) & ?[s]:((arg1(s)=x) & same(s) & present(s) & (arg2(s)=m))))};

: # Mercury is a planet in the Solar System.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Mercury")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(A "a")
						(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_no_constant_in_set
							(NOMINAL_R:identity_predicative
								(NOMINAL_R:try_remove_genitive,remove_right_conjunct_in_set
									(NOMINAL_L:identity_predicative
										(N:require_no_correlator_predicative,select_predicate_in_set "planet"/"planet")
									)
								)
								(N_ADJUNCT:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_right_conjunct_in_set,remove_wide_scope,try_remove_number
									(PP:try_remove_correlated,select_right_arg1_of_without_head
										(P:require_no_preposition,remove_right_conjunct "in")
										(NP:try_remove_correlated,try_remove_is_adjunct,try_remove_modifies_event,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
											(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
												(THE "the")
												(NP':try_remove_correlated,require_predicative_existential,try_add_singular
													(NOMINAL_R:identity_predicative
														(NOMINAL_L:identity_predicative
															(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Solar System"/"Solar System")
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[x]:(?[n]:(name(n) & (arg1_of(x)=n) & (arg2(n)="Solar System")) & ?[p]:(planet(p) & ?[l]:(locate(l) & (arg2(l)=x) & (arg1_of(p)=l)) & ?[m]:(?[n]:(name(n) & (arg1_of(m)=n) & (arg2(n)="Mercury")) & ?[s]:((arg1(s)=m) & same(s) & present(s) & (arg2(s)=p)))))};

: # Mercury is in the Solar System.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Mercury")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:select_left_predicate_and_tense,set_predicate_empty,factor
					(VP_L:identity
						(BE:require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,empty_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:remove_second_left_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(PP:remove_wide_scope,add_is_adjunct,require_no_preposition
						(P:require_no_preposition,remove_right_conjunct "in")
						(NP:try_remove_correlated,try_remove_is_adjunct,try_remove_modifies_event,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
							(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
								(THE "the")
								(NP':try_remove_correlated,require_predicative_existential,try_add_singular
									(NOMINAL_R:identity_predicative
										(NOMINAL_L:identity_predicative
											(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Solar System"/"Solar System")
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[x]:(?[n]:(name(n) & (arg1_of(x)=n) & (arg2(n)="Solar System")) & ?[m]:(?[n]:(name(n) & (arg1_of(m)=n) & (arg2(n)="Mercury")) & ?[l]:((arg1(l)=m) & locate(l) & present(l) & (arg2(l)=x))))};

: # Neptune is one of the 8 planets in the Solar System.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Neptune")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_singleton
							(NOMINAL_R:identity_predicative
								(NOMINAL_R:try_remove_genitive,remove_right_conjunct_in_set
									(NOMINAL_L:identity_predicative
										(NUMBER:require_no_correlator_predicative,require_no_measure,set_size "one"/"one")
									)
								)
								(OF "of")
								(NP:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_right_subset_in_set,try_remove_number,require_no_constant_in_set,has_arg2_in_set
									(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
										(THE "the")
										(NP':try_remove_correlated,require_predicative_universal,try_add_plural
											(Q:try_remove_genitive,select_second_left_set_conjunct_root,size
												(NUMBER:identity_root "8"/"8")
											)
											(NOMINAL_R:try_remove_correlated,remove_second_left_set_conjunct
												(NOMINAL_R:try_remove_genitive,remove_right_conjunct_in_set
													(NOMINAL_L:identity_predicative
														(N:require_no_correlator_predicative,select_predicate_in_set "planet"/"planets")
													)
												)
												(N_ADJUNCT:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_right_conjunct_in_set,remove_wide_scope,try_remove_number
													(PP:try_remove_correlated,select_right_arg1_of_without_head
														(P:require_no_preposition,remove_right_conjunct "in")
														(NP:try_remove_correlated,try_remove_is_adjunct,try_remove_modifies_event,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
															(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
																(THE "the")
																(NP':try_remove_correlated,require_predicative_existential,try_add_singular
																	(NOMINAL_R:identity_predicative
																		(NOMINAL_L:identity_predicative
																			(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Solar System"/"Solar System")
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[z]:(?[n]:(name(n) & (arg1_of(z)=n) & (arg2(n)="Solar System")) & ?[P]:((P=^[p]:(planet(p) & ?[l]:(locate(l) & (arg2(l)=z) & (arg1_of(p)=l)))) & (size(P)=8) & ?[S]:(subset(S,^[x]:P(x)) & (size(S)=1) & ?[x]:(S(x) & ?[y]:(?[n]:(name(n) & (arg1_of(y)=n) & (arg2(n)="Neptune")) & ?[s]:((arg1(s)=y) & same(s) & present(s) & (arg2(s)=x)))))))};

: # United States
{(STRING "United States")}
	{"United States"[index:sg]};

: # United States of America
{(STRING "United States of America")}
	{"United States of America"[index:sg]};

: # US
{(STRING "US")}
	{"US"[index:sg]};

: # USA
{(STRING "USA")}
	{"USA"[index:sg]};

: # state
{(N "state"/"state")}
	{state[index:sg]};

: # New York
{(STRING "New York")}
	{"New York"[index:sg]};

: # New York City
{(STRING "New York City")}
	{"New York City"[index:sg]};

: # NYC
{(STRING "NYC")}
	{"NYC"[index:sg]};

: # thing
{(N "thing"/"thing")}
	{object[index:sg]};

: # There are four gaseous planets.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_plural,require_no_conjunction,try_remove_is_adjunct
			(THERE "there")
			(VP_R:try_remove_nullable_subject,require_no_lambda,try_remove_correlated,require_no_correlator,require_left_predicate_exist,set_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(BE:require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,empty_and_tense "be"/"are")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
						(NP':try_add_plural,try_remove_adv,require_no_correlator_predicative,require_predicative_universal
							(Q:try_remove_genitive,select_second_left_set_conjunct_root,size
								(NUMBER:identity_root "four"/"four")
							)
							(NOMINAL_R:try_remove_correlated,remove_second_left_set_conjunct
								(NOMINAL_L:identity_predicative
									(ADJP_R:try_remove_genitive,try_remove_wh_minus,try_remove_measure,select_left_conjunct_in_set,select_right_arg1_of_without_head
										(ADJP_L:try_remove_is_adjunct
											(ADJ:require_no_correlator "gaseous"/"gaseous")
										)
									)
									(NOMINAL_L:try_remove_correlated,remove_left_conjunct_in_set
										(N:require_no_correlator_predicative,select_predicate_in_set "planet"/"planets")
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[X]:((X=^[x]:(?[l]:(gaseous(l) & (arg1_of(x)=l)) & planet(x))) & (size(X)=4) & ![x]:(X(x) => ?[e]:(exist(e) & present(e) & (arg1(e)=x))))};

: # Each cat is a mammal.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(EACH "each")
					(NOMINAL_R:try_add_singular,require_no_adv,try_remove_correlated,require_no_correlator_predicative,require_predicative_universal
						(NOMINAL_L:identity_predicative
							(N:require_no_correlator_predicative,select_predicate_in_set "cat"/"cat")
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(A "a")
						(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_no_constant_in_set
							(NOMINAL_R:identity_predicative
								(NOMINAL_L:identity_predicative
									(N:require_no_correlator_predicative,select_predicate_in_set "mammal"/"mammal")
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{![x]:(cat(x) => ?[m]:(mammal(m) & ?[s]:((arg1(s)=x) & same(s) & present(s) & (arg2(s)=m))))};

: # Each mammal is female or male.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(EACH "each")
					(NOMINAL_R:try_add_singular,require_no_adv,try_remove_correlated,require_no_correlator_predicative,require_predicative_universal
						(NOMINAL_L:identity_predicative
							(N:require_no_correlator_predicative,select_predicate_in_set "mammal"/"mammal")
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:select_left_predicate_and_tense,set_predicate_empty,factor
					(VP_L:identity
						(BE:require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,empty_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:remove_second_left_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(V_ADJUNCT:remove_wide_scope,require_disjunction,select_left_operand
						(ADJP_R:remove_wide_scope,add_is_adjunct,require_no_preposition
							(ADJP_L:try_remove_is_adjunct
								(ADJ:require_no_correlator "female"/"female")
							)
						)
					)
					(V_ADJUNCT_COORDINATION:remove_wide_scope,try_remove_correlator,remove_left_operand,add_or
						(OR:empty "or")
						(V_ADJUNCT:remove_or,require_no_comma
							(ADJP_R:remove_wide_scope,add_is_adjunct,require_no_preposition
								(ADJP_L:try_remove_is_adjunct
									(ADJ:require_no_correlator "male"/"male")
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{![x]:(mammal(x) => (?[f]:((arg1(f)=x) & female(f) & present(f)) | ?[m]:((arg1(m)=x) & male(m) & present(m))))};

: # One planet is Earth.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_singleton
						(Q:try_remove_genitive,select_second_left_set_conjunct_root,size
							(NUMBER:identity_root "one")
						)
						(NOMINAL_R:try_remove_correlated,remove_second_left_set_conjunct,replace_predicative_subset_with_equality
							(NOMINAL_L:identity_predicative
								(N:require_no_correlator_predicative,select_predicate_in_set "planet"/"planet")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
							(NOMINAL_R:identity_predicative
								(NOMINAL_L:identity_predicative
									(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Earth")
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[P]:(subset(P,^[p]:planet(p)) & (size(P)=1) & ?[e]:(?[n]:(name(n) & (arg1_of(e)=n) & (arg2(n)="Earth")) & ?[x]:(P(x) & ?[s]:((arg1(s)=x) & same(s) & present(s) & (arg2(s)=e)))))};

: # Jupiter is gaseous.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Jupiter")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:select_left_predicate_and_tense,set_predicate_empty,factor
					(VP_L:identity
						(BE:require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,empty_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:remove_second_left_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(ADJP_R:remove_wide_scope,add_is_adjunct,require_no_preposition
						(ADJP_L:try_remove_is_adjunct
							(ADJ:require_no_correlator "gaseous"/"gaseous")
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[j]:(?[n]:(name(n) & (arg1_of(j)=n) & (arg2(n)="Jupiter")) & ?[l]:((arg1(l)=j) & gaseous(l) & present(l)))};

# TODO: add this is a training example; currently (as of Feb 7) our parser wants to parse this as ?[f]:(?[x]:(mammal(x) & (arg1(f)=x)) & female(f) & present(f)) | ?[m]:(?[x]:(mammal(x) & (arg1(m)=x)) & male(m) & present(m))
#: # A mammal is female or male.
#{(S
#	(S':require_no_lambda,mark_wide_scope
#		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
#			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
#				(NP:require_no_preposition,require_no_inverse,try_remove_req_aux,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
#					(A "a")
#					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_no_constant_in_set
#						(NOMINAL_R:identity_predicative
#							(NOMINAL_L:identity_predicative
#								(N:require_no_correlator_predicative,select_predicate_in_set "mammal"/"mammal")
#							)
#						)
#					)
#				)
#			)
#			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
#				(VP_R:select_left_predicate_and_tense,set_predicate_empty,factor
#					(VP_L:identity
#						(BE:require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,empty_and_tense "be"/"is")
#					)
#				)
#				(V_ADJUNCT:remove_second_left_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
#					(V_ADJUNCT:remove_wide_scope,require_conjunction,select_left_operand
#						(ADJP_R:remove_wide_scope,add_is_adjunct,require_no_preposition
#							(ADJP_L:try_remove_is_adjunct
#								(ADJ:require_no_correlator "female"/"female")
#							)
#						)
#					)
#					(V_ADJUNCT_COORDINATION:remove_wide_scope,try_remove_correlator,remove_left_operand,add_or
#						(OR:empty "or")
#						(V_ADJUNCT:remove_or,require_no_comma
#							(ADJP_R:remove_wide_scope,add_is_adjunct,require_no_preposition
#								(ADJP_L:try_remove_is_adjunct
#									(ADJ:require_no_correlator "male"/"male")
#								)
#							)
#						)
#					)
#				)
#			)
#		)
#	)
#	(PERIOD ".")
#)}
#	{?[x]:(mammal(x) & (?[f]:((arg1(f)=x) & female(f) & present(f)) | ?[m]:((arg1(m)=x) & male(m) & present(m))))};

: # river
{(N "river"/"river")}
	{river[index:sg]};

: # mountain
{(N "mountain"/"mountain")}
	{mountain[index:sg]};

: # country
{(N "country"/"country")}
	{country[index:sg]};

: # city
{(N "city"/"city")}
	{city[index:sg]};

: # town
{(N "town"/"town")}
	{town[index:sg]};

: # county
{(N "county"/"county")}
	{county[index:sg]};

: # major
{(ADJ "major"/"major")}
	{?[x]:major(x)};

: # north
{(ADJ "north"/"north")}
	{?[x]:north(x)};

: # northern
{(ADJ "northern"/"northern")}
	{?[x]:north(x)};

: # south
{(ADJ "south"/"south")}
	{?[x]:south(x)};

: # southern
{(ADJ "southern"/"southern")}
	{?[x]:south(x)};

: # east
{(ADJ "east"/"east")}
	{?[x]:east(x)};

: # eastern
{(ADJ "eastern"/"eastern")}
	{?[x]:east(x)};

: # west
{(ADJ "west"/"west")}
	{?[x]:west(x)};

: # western
{(ADJ "western"/"western")}
	{?[x]:west(x)};

: # northeast
{(ADJ "northeast"/"northeast")}
	{?[x]:northeast(x)};

: # northeastern
{(ADJ "northeastern"/"northeastern")}
	{?[x]:northeast(x)};

: # southeast
{(ADJ "southeast"/"southeast")}
	{?[x]:southeast(x)};

: # southeastern
{(ADJ "southeastern"/"southeastern")}
	{?[x]:southeast(x)};

: # northwest
{(ADJ "northwest"/"northwest")}
	{?[x]:northwest(x)};

: # northwestern
{(ADJ "northwestern"/"northwestern")}
	{?[x]:northwest(x)};

: # southwest
{(ADJ "southwest"/"southwest")}
	{?[x]:southwest(x)};

: # southwestern
{(ADJ "southwestern"/"southwestern")}
	{?[x]:southwest(x)};

: # central
{(ADJ "central"/"central")}
	{?[x]:central(x)};

: # population
{(N "population"/"population")}
	{population[index:sg,arg2]};

: # area
{(N "area"/"area")}
	{area[index:sg,arg2]};

: # capital
{(N "capital"/"capital")}
	{capital[index:sg,arg2]};

: # mountain
{(N "mountain"/"mountain")}
	{mountain[index:sg]};

: # river
{(N "river"/"river")}
	{river[index:sg]};

: # Mercury is a planet and Neptune is a planet.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S':require_conjunction,select_left_operand
			(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
				(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
					(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
						(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
							(NOMINAL_R:identity_predicative
								(NOMINAL_L:identity_predicative
									(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Mercury")
								)
							)
						)
					)
				)
				(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
					(VP_R:remove_right_conjunct
						(VP_L:identity
							(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
						)
					)
					(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
						(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
							(A "a")
							(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_no_constant_in_set
								(NOMINAL_R:identity_predicative
									(NOMINAL_L:identity_predicative
										(N:require_no_correlator_predicative,select_predicate_in_set "planet"/"planet")
									)
								)
							)
						)
					)
				)
			)
		)
		(S_COORDINATION:try_remove_correlator,remove_left_operand,add_and
			(AND "and")
			(S':remove_and,require_no_comma
				(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
					(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
						(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
							(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
								(NOMINAL_R:identity_predicative
									(NOMINAL_L:identity_predicative
										(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Neptune")
									)
								)
							)
						)
					)
					(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
						(VP_R:remove_right_conjunct
							(VP_L:identity
								(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
							)
						)
						(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
							(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
								(A "a")
								(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_no_constant_in_set
									(NOMINAL_R:identity_predicative
										(NOMINAL_L:identity_predicative
											(N:require_no_correlator_predicative,select_predicate_in_set "planet"/"planet")
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[p]:(planet(p) & ?[x]:(?[n]:(name(n) & (arg1_of(x)=n) & (arg2(n)="Mercury")) & ?[s]:((arg1(s)=x) & same(s) & present(s) & (arg2(s)=p)))) & ?[p]:(planet(p) & ?[x]:(?[n]:(name(n) & (arg1_of(x)=n) & (arg2(n)="Neptune")) & ?[s]:((arg1(s)=x) & same(s) & present(s) & (arg2(s)=p))))};

: # No mammal is a fish.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NO "no")
					(NOMINAL_R:try_remove_adv,try_remove_correlated,require_no_correlator_predicative,add_negative,remove_predicative_not,require_predicative_existential
						(NOMINAL_L:identity_predicative
							(N:require_no_correlator_predicative,select_predicate_in_set "mammal"/"mammal")
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(A "a")
						(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_no_constant_in_set
							(NOMINAL_R:identity_predicative
								(NOMINAL_L:identity_predicative
									(N:require_no_correlator_predicative,select_predicate_in_set "fish"/"fish")
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{~?[m]:(mammal(m) & ?[f]:(fish(f) & ?[s]:((arg1(s)=m) & same(s) & present(s) & (arg2(s)=f))))};

: # A nucleus inhabits every eukaryote.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(A "a")
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_no_constant_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(N:require_no_correlator_predicative,select_predicate_in_set "nucleus"/"nucleus")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "inhabit"/"inhabits")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(EACH "every")
						(NOMINAL_R:try_add_singular,require_no_adv,try_remove_correlated,require_no_correlator_predicative,require_predicative_universal
							(NOMINAL_L:identity_predicative
								(N:require_no_correlator_predicative,select_predicate_in_set "eukaryote"/"eukaryote")
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[n]:(nucleus(n) & ![e]:(eukaryote(e) => ?[l]:((arg1(l)=n) & locate(l) & present(l) & (arg2(l)=e))))};

: # No cell is both eukaryotic and prokaryotic.
{(S
	(S':require_no_lambda,mark_wide_scope 
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NO:empty "no")
					(NOMINAL_R:try_remove_adv,try_remove_correlated,require_no_correlator_predicative,add_negative,remove_predicative_not,require_predicative_existential
						(NOMINAL_L:identity_predicative
							(N:require_no_correlator_predicative,select_predicate_in_set "cell"/"cell")
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2	# ?[x]:(eukaryote(x) & present(x)) & ?[x]:(prokaryote(x) & present(x)))
				(VP_R:select_left_predicate_and_tense,set_predicate_empty,factor
					(VP_L:identity
						(BE:require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,empty_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:remove_second_left_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(BOTH "both")
					(V_ADJUNCT:require_binary_conjunction,require_not_correlated,add_correlated_by_both
						(V_ADJUNCT:remove_wide_scope,require_conjunction,select_left_operand
							(ADJP_R:remove_wide_scope,add_is_adjunct,require_no_preposition
								(ADJP_L:try_remove_is_adjunct
									(ADJ:require_no_correlator "eukaryotic"/"eukaryotic")
								)
							)
						)
						(V_ADJUNCT_COORDINATION:remove_wide_scope,try_remove_correlator,remove_left_operand,add_and
							(AND:empty "and")
							(V_ADJUNCT:remove_and,require_no_comma
								(ADJP_R:remove_wide_scope,add_is_adjunct,require_no_preposition
									(ADJP_L:try_remove_is_adjunct
										(ADJ:require_no_correlator "prokaryotic"/"prokaryotic")
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD:empty ".")
)}
	{~?[c]:(cell(c) & (?[x]:((arg1(x)=c) & eukaryote(x) & present(x)) & ?[x]:((arg1(x)=c) & prokaryote(x) & present(x))))};

: # There are 8 gaseous or terrestrial planets.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_plural,require_no_conjunction,try_remove_is_adjunct
			(THERE "there")
			(VP_R:try_remove_nullable_subject,require_no_lambda,try_remove_correlated,require_no_correlator,require_left_predicate_exist,set_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(BE:require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,empty_and_tense "be"/"are")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
						(NP':try_add_plural,try_remove_adv,require_no_correlator_predicative,require_predicative_universal
							(Q:try_remove_genitive,select_second_left_set_conjunct_root,size
								(NUMBER:identity_root "8"/"8")
							)
							(NOMINAL_R:try_remove_correlated,remove_second_left_set_conjunct
								(NOMINAL_L:identity_predicative
									(ADJP_R:try_remove_genitive,try_remove_wh_minus,try_remove_measure,select_left_conjunct_in_set,select_right_arg1_of_without_head
										(ADJP_R:require_not_adjunct,require_disjunction,select_left_operand
											(ADJP_L:try_remove_is_adjunct
												(ADJ:require_no_correlator "gaseous"/"gaseous")
											)
										)
										(ADJP_COORDINATION:try_remove_correlator,remove_left_operand,add_or
											(OR:empty "or")
											(ADJP_R:remove_or,require_no_comma
												(ADJP_L:try_remove_is_adjunct
													(ADJ:require_no_correlator "terrestrial"/"terrestrial")
												)
											)
										)
									)
									(NOMINAL_L:try_remove_correlated,remove_left_conjunct_in_set
										(N:require_no_correlator_predicative,select_predicate_in_set "planet"/"planets")
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[X]:((X=^[x]:((?[g]:(gaseous(g) & (arg1_of(x)=g)) | ?[t]:(terrestrial(t) & (arg1_of(x)=t))) & planet(x))) & (size(X)=8) & ![x]:(X(x) => ?[e]:(exist(e) & present(e) & (arg1(e)=x))))};

: # What is the mass of Jupiter?
{(S
	(S':require_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(PRO:try_remove_adv
						(WHAT:require_no_wh_minus,require_predicate_of_lambda "what")
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
							(THE "the")
							(NP':try_remove_correlated,require_predicative_existential,try_add_singular
								(NOMINAL_R:identity_predicative
									(NOMINAL_R:try_remove_genitive,select_singleton_arg2_of_in_set_without_head_predicative,remove_right_conjunct_in_set,try_add_has_arg2
										(NOMINAL_L:identity_predicative
											(N:require_no_correlator_predicative,select_predicate_in_set "mass"/"mass")
										)
									)
									(OF_FOR "of")
									(NP:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_singleton_arg2_of_in_set_without_head_predicative,select_right_conjunct_in_set,select_right_arg1_without_head_predicative,try_remove_number,has_arg2_in_set
										(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
											(NOMINAL_R:identity_predicative
												(NOMINAL_L:identity_predicative
													(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Jupiter"/"Jupiter")
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(QUESTION "?")
)}
	{^[x]:?[v]:(?[j]:(?[n]:(name(n) & (arg1_of(j)=n) & (arg2(n)="Jupiter")) & ?[m]:(mass(m) & (arg1(m)=j) & (arg2_of(v)=m))) & ?[s]:((arg1(s)=x) & same(s) & present(s) & (arg2(s)=v)))};

: # Saturn is a name for a planet.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_string_or_number_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_string_in_set,require_capitalized "Saturn")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(A "a")
						(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_no_constant_in_set
							(NOMINAL_R:identity_predicative
								(NOMINAL_R:try_remove_genitive,select_singleton_arg2_of_in_set_without_head_predicative,remove_right_conjunct_in_set,try_add_has_arg2
									(NOMINAL_L:identity_predicative
										(N:require_no_correlator_predicative,select_predicate_in_set "name"/"name")
									)
								)
								(OF_FOR "for")
								(NP:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_singleton_arg2_of_in_set_without_head_predicative,select_right_conjunct_in_set,select_right_arg1_without_head_predicative,try_remove_number,has_arg2_in_set
									(A "a")
									(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_no_constant_in_set
										(NOMINAL_R:identity_predicative
											(NOMINAL_L:identity_predicative
												(N:require_no_correlator_predicative,select_predicate_in_set "planet"/"planet")
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[x]:(?[p]:(planet(p) & ?[n]:(name(n) & (arg1(n)=p) & (arg2_of(x)=n))) & ?[s]:((arg1(s)="Saturn") & same(s) & present(s) & (arg2(s)=x)))};

: # Venus is a planet in the inner part of the solar system.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Venus")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(A "a")
						(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_no_constant_in_set
							(NOMINAL_R:identity_predicative
								(NOMINAL_R:try_remove_genitive,remove_right_conjunct_in_set
									(NOMINAL_L:identity_predicative
										(N:require_no_correlator_predicative,select_predicate_in_set "planet"/"planet")
									)
								)
								(N_ADJUNCT:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_right_conjunct_in_set,remove_wide_scope,try_remove_number
									(PP:try_remove_correlated,select_right_arg1_of_without_head
										(P:require_no_preposition,remove_right_conjunct "in")
										(NP:try_remove_correlated,try_remove_is_adjunct,try_remove_modifies_event,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
											(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
												(THE "the")
												(NP':try_remove_correlated,require_predicative_existential,try_add_singular
													(NOMINAL_R:identity_predicative
														(NOMINAL_R:try_remove_genitive,select_singleton_arg2_of_in_set_without_head_predicative,remove_right_conjunct_in_set,try_add_has_arg2
															(NOMINAL_L:identity_predicative
																(ADJP_R:try_remove_genitive,try_remove_wh_minus,try_remove_measure,select_left_conjunct_in_set,select_right_arg1_of_without_head
																	(ADJP_L:try_remove_is_adjunct
																		(ADJ:require_no_correlator "inner"/"inner")
																	)
																)
																(NOMINAL_L:try_remove_correlated,remove_left_conjunct_in_set
																	(N:require_no_correlator_predicative,select_predicate_in_set "part"/"part")
																)
															)
														)
														(OF_FOR "of")
														(NP:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_singleton_arg2_of_in_set_without_head_predicative,select_right_conjunct_in_set,select_right_arg1_without_head_predicative,try_remove_number,has_arg2_in_set
															(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
																(THE "the")
																(NP':try_remove_correlated,require_predicative_existential,try_add_singular
																	(NOMINAL_R:identity_predicative
																		(NOMINAL_L:identity_predicative
																			(N:require_no_correlator_predicative,select_predicate_in_set "solar system"/"solar system")
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[x]:(?[y]:(?[i]:(inner(i) & (arg1_of(y)=i)) & contains_region(y) & (arg1(y)=solar_system) & (arg2_of(x)=y)) & ?[p]:(planet(p) & ?[l]:(locate(l) & (arg2(l)=x) & (arg1_of(p)=l)) & ?[v]:(?[n]:(name(n) & (arg1_of(v)=n) & (arg2(n)="Venus")) & ?[s]:((arg1(s)=v) & same(s) & present(s) & (arg2(s)=p)))))};

: # The Earth is located in the solar system.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
						(THE "the")
						(NP':try_remove_correlated,require_predicative_existential,try_add_singular
							(NOMINAL_R:identity_predicative
								(NOMINAL_L:identity_predicative
									(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Earth")
								)
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(BE:identity "be"/"is")
						(VP_L:try_remove_correlated,require_no_future,require_no_perfect,require_no_progressive,remove_inverse,add_past_participle,add_aux
							(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "locate"/"located")
						)
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(PP:remove_wide_scope,add_is_adjunct,add_modifies_event,require_no_predicate_same,select_right_arg1_of_without_head
						(P:require_no_preposition,remove_right_conjunct "in")
						(NP:try_remove_correlated,try_remove_is_adjunct,try_remove_modifies_event,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
							(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
								(THE "the")
								(NP':try_remove_correlated,require_predicative_existential,try_add_singular
									(NOMINAL_R:identity_predicative
										(NOMINAL_L:identity_predicative
											(N:require_no_correlator_predicative,select_predicate_in_set "solar system"/"solar system")
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[e]:(?[n]:(name(n) & (arg1_of(e)=n) & (arg2(n)="Earth")) & ?[l]:((arg1(l)=e) & inverse(locate)(l) & present(l) & ?[i]:(locate(i) & (arg2(i)=solar_system) & (arg1_of(l)=i))))};

: # Eris is orbited by which moon?
{(S
	(S':require_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Eris")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(BE:identity "be"/"is")
						(VP_L:try_remove_correlated,require_no_future,require_no_perfect,require_no_progressive,remove_inverse,add_past_participle,add_aux
							(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "orbit"/"orbited")
						)
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(BY "by")
					(NP:require_no_preposition,require_left_predicate_inverse,try_remove_correlated,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(WHICH:require_no_wh_minus "which")
						(NOMINAL_R:try_remove_adv,try_remove_correlated,require_no_correlator_predicative,replace_predicative_lambda_with_existential,require_no_constant_in_set,try_add_singular
							(NOMINAL_L:identity_predicative
								(N:require_no_correlator_predicative,select_predicate_in_set "moon"/"moon")
							)
						)
					)
				)
			)
		)
	)
	(QUESTION "?")
)}
	{^[x]:?[e]:(?[n]:(name(n) & (arg1_of(e)=n) & (arg2(n)="Eris")) & ?[S]:((S=^[m]:moon(m)) & S(x) & ?[o]:((arg1(o)=e) & inverse(orbit)(o) & present(o) & (arg2(o)=x))))};

: # Rigel is located in what constellation?
{(S
	(S':require_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Rigel")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(BE:identity "be"/"is")
						(VP_L:try_remove_correlated,require_no_future,require_no_perfect,require_no_progressive,remove_inverse,add_past_participle,add_aux
							(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "locate"/"located")
						)
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(PP:remove_wide_scope,add_is_adjunct,add_modifies_event,require_no_predicate_same,select_right_arg1_of_without_head
						(P:require_no_preposition,remove_right_conjunct "in")
						(NP:try_remove_correlated,try_remove_is_adjunct,try_remove_modifies_event,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
							(WHAT:require_no_wh_minus "what")
							(NOMINAL_R:try_remove_adv,try_remove_correlated,require_no_correlator_predicative,replace_predicative_lambda_with_existential,require_no_constant_in_set,try_add_singular
								(NOMINAL_L:identity_predicative
									(N:require_no_correlator_predicative,select_predicate_in_set "constellation"/"constellation")
								)
							)
						)
					)
				)
			)
		)
	)
	(QUESTION "?")
)}
	{^[x]:?[r]:(?[n]:(name(n) & (arg1_of(r)=n) & (arg2(n)="Rigel")) & ?[S]:((S=^[c]:constellation(c)) & S(x) & ?[l]:((arg1(l)=r) & inverse(locate)(l) & present(l) & ?[i]:(locate(i) & (arg2(i)=x) & (arg1_of(l)=i)))))};

: # The Outer Solar System is a name for the outer planets in the Solar System.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
						(THE "the")
						(NP':try_remove_correlated,require_predicative_existential,try_add_singular
							(NOMINAL_R:identity_predicative
								(NOMINAL_L:identity_predicative
									(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_string_in_set,require_capitalized "Outer Solar System")
								)
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(A "a")
						(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_no_constant_in_set
							(NOMINAL_R:identity_predicative
								(NOMINAL_R:try_remove_genitive,select_singleton_arg2_of_in_set_without_head_predicative,remove_right_conjunct_in_set,try_add_has_arg2
									(NOMINAL_L:identity_predicative
										(N:require_no_correlator_predicative,select_predicate_in_set "name"/"name")
									)
								)
								(OF_FOR "for")
								(NP:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_singleton_arg2_of_in_set_without_head_predicative,select_right_conjunct_in_set,select_right_arg1_without_head_predicative,try_remove_number,has_arg2_in_set
									(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
										(THE "the")
										(NP':try_remove_correlated,require_predicative_universal,try_add_plural
											(NOMINAL_R:identity_predicative
												(NOMINAL_R:try_remove_genitive,remove_right_conjunct_in_set
													(NOMINAL_L:identity_predicative
														(ADJP_R:try_remove_genitive,try_remove_wh_minus,try_remove_measure,select_left_conjunct_in_set,select_right_arg1_of_without_head
															(ADJP_L:try_remove_is_adjunct
																(ADJ:require_no_correlator "outer"/"outer")
															)
														)
														(NOMINAL_L:try_remove_correlated,remove_left_conjunct_in_set
															(N:require_no_correlator_predicative,select_predicate_in_set "planet"/"planets")
														)
													)
												)
												(N_ADJUNCT:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_right_conjunct_in_set,remove_wide_scope,try_remove_number
													(PP:try_remove_correlated,select_right_arg1_of_without_head
														(P:require_no_preposition,remove_right_conjunct "in")
														(NP:try_remove_correlated,try_remove_is_adjunct,try_remove_modifies_event,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
															(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
																(THE:empty "the")
																(NP':try_remove_correlated,require_predicative_existential,try_add_singular
																	(NOMINAL_R:identity_predicative
																		(NOMINAL_L:identity_predicative
																			(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Solar System")
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[y]:(?[n]:(name(n) & (arg1_of(y)=n) & (arg2(n)="Solar System")) & ?[x]:(?[P]:((P=^[p]:(?[o]:(outer(o) & (arg1_of(p)=o)) & planet(p) & ?[l]:(locate(l) & (arg2(l)=y) & (arg1_of(p)=l)))) & ?[n]:(name(n) & (arg1(n)=P) & (arg2_of(x)=n))) & ?[s]:((arg1(s)="Outer Solar System") & same(s) & present(s) & (arg2(s)=x))))};

: # The population of the Earth is 7594000000.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
						(THE "the")
						(NP':try_remove_correlated,require_predicative_existential,try_add_singular
							(NOMINAL_R:identity_predicative
								(NOMINAL_R:try_remove_genitive,select_singleton_arg2_of_in_set_without_head_predicative,remove_right_conjunct_in_set,try_add_has_arg2
									(NOMINAL_L:identity_predicative
										(N:require_no_correlator_predicative,select_predicate_in_set "population"/"population")
									)
								)
								(OF_FOR "of")
								(NP:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_singleton_arg2_of_in_set_without_head_predicative,select_right_conjunct_in_set,select_right_arg1_without_head_predicative,try_remove_number,has_arg2_in_set
									(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
										(THE:empty "the")
										(NP':try_remove_correlated,require_predicative_existential,try_add_singular
											(NOMINAL_R:identity_predicative
												(NOMINAL_L:identity_predicative
													(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Earth")
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_string_or_number_in_set
							(NOMINAL_R:identity_predicative
								(NOMINAL_L:identity_predicative
									(NUMBER:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_number_in_set "7594000000")
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[x]:(?[e]:(?[n]:(name(n) & (arg1_of(e)=n) & (arg2(n)="Earth")) & ?[p]:(population(p) & (arg1(p)=e) & (arg2_of(x)=p))) & ?[s]:((arg1(s)=x) & same(s) & present(s) & (arg2(s)=7594000000)))};

#: # How heavy is Mars?
#{(S
#	(S':require_lambda,mark_wide_scope		# ^[x]:?[m]:((arg1(m)=mars) & mass(m) & present(m) & (arg2(m)=x))
#		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct		# ^[x]:?[m]:(mass(m) & present(m) & (arg1(m)=mars) & (arg2(m)=x))
#			(V_ADJUNCT:try_remove_nullable_subject,try_remove_subordinate,try_remove_correlator,select_right_of_lambda	# ^[x]:?[m]:(mass(m) & (arg2(m)=x))
#				(ADJP_R:remove_wide_scope,add_is_adjunct,require_no_preposition	# ^[x]:?[m]:(mass(m) & (arg2(m)=x))
#					(HOW "how")
#					(ADJP_R:try_remove_is_adjunct,remove_right_arg2_lambda	# ?[m]:mass(m)
#						(ADJP_L:try_remove_is_adjunct
#							(ADJ:require_no_correlator "heavy"/"heavy")
#						)
#					)
#				)
#			)
#			(VP_R:try_remove_nullable_subject,try_add_req_aux,try_remove_subordinate,try_remove_correlated,add_wh_minus,remove_right_of_lambda,require_no_predicate_empty,has_arg2
#				
#
#				(VP_R:select_left_predicate_and_tense,set_predicate_empty,factor		# ?[m]:(empty(m) & present(m))
#					(VP_L:identity
#						(BE:require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,empty_and_tense "be"/"is")
#					)
#				)
#				(V_ADJUNCT:remove_second_left_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
#					(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
#						(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
#							(NOMINAL_R:identity_predicative
#								(NOMINAL_L:identity_predicative
#									(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Mars")
#								)
#							)
#						)
#					)
#				)
#			)
#		)
#	)
#	(QUESTION "?")
#)}
#	{^[x]:?[y]:(?[n]:(name(n) & (arg1_of(y)=n) & (arg2(n)="Mars")) & ?[m]:(mass(m) & present(m) & (arg1(m)=y) & (arg2(m)=x)))};

#: # Mars is how heavy?
#{(S
#	(S':require_lambda,mark_wide_scope		# ^[x]:?[m]:((arg1(m)=mars) & mass(m) & present(m) & (arg2(m)=x))
#		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct		# ^[x]:?[m]:((arg1(m)=mars) & mass(m) & present(m) & (arg2(m)=x))
#			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct		# ?[m]:(mass(m) & (arg1(m)=mars))
#				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
#					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
#						(NOMINAL_R:identity_predicative
#							(NOMINAL_L:identity_predicative
#								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Mars")
#							)
#						)
#					)
#				)
#			)
#			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2		# ^[x]:?[m]:(mass(m) & present(m) & (arg2(m)=x))
#				(VP_R:select_left_predicate_and_tense,set_predicate_empty,factor		# ?[m]:(empty(m) & present(m))
#					(VP_L:identity
#						(BE:require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,empty_and_tense "be"/"is")
#					)
#				)
#				(V_ADJUNCT:remove_second_left_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number		# ^[x]:?[m]:(mass(m) & (arg2(m)=x))
#					(ADJP_R:remove_wide_scope,add_is_adjunct,require_no_preposition
#						(HOW "how")
#						(ADJP_R:try_remove_is_adjunct,remove_right_arg2_lambda	# ?[m]:mass(m)
#							(ADJP_L:try_remove_is_adjunct
#								(ADJ:require_no_correlator "heavy"/"heavy")
#							)
#						)
#					)
#				)
#			)
#		)
#	)
#	(QUESTION "?")
#)}
#	{^[x]:?[y]:(?[n]:(name(n) & (arg1_of(y)=n) & (arg2(n)="Mars")) & ?[m]:((arg1(m)=y) & mass(m) & present(m) & (arg2(m)=x)))};

: # red
{(ADJ "red"/"red")}
	{?[x]:red(x)};

: # blue
{(ADJ "blue"/"blue")}
	{?[x]:blue(x)};

: # green
{(ADJ "green"/"green")}
	{?[x]:green(x)};

: # yellow
{(ADJ "yellow"/"yellow")}
	{?[x]:yellow(x)};

: # purple
{(ADJ "purple"/"purple")}
	{?[x]:purple(x)};

: # pink
{(ADJ "pink"/"pink")}
	{?[x]:pink(x)};

: # black
{(ADJ "black"/"black")}
	{?[x]:black(x)};

: # white
{(ADJ "white"/"white")}
	{?[x]:white(x)};

: # American
{(ADJ "American"/"American")}
	{?[x]:american(x)};

: # cyanobacterium
{(N "cyanobacterium"/"cyanobacterium")}
	{cyanobacterium[index:sg]};

: # alga
{(N "alga"/"alga")}
	{alga[index:sg]};

: # Fair Trade Day is in the month of May.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Fair Trade Day")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:select_left_predicate_and_tense,set_predicate_empty,factor
					(VP_L:identity
						(BE:require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,empty_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:remove_second_left_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(PP:remove_wide_scope,add_is_adjunct,require_no_preposition
						(P:require_no_preposition,remove_right_conjunct "in")
						(NP:try_remove_correlated,try_remove_is_adjunct,try_remove_modifies_event,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
							(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
								(THE "the")
								(NP':try_remove_correlated,require_predicative_existential,try_add_singular
									(NOMINAL_R:identity_predicative
										(NOMINAL_R:try_remove_genitive,remove_right_conjunct_in_set,require_right_predicate_in_set
											(NOMINAL_L:identity_predicative
												(N:require_no_correlator_predicative,select_predicate_in_set "month"/"month")
											)
										)
										(OF "of")
										(NP:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_only_right_conjunct_in_set_predicative,require_name_in_set,try_remove_number
											(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
												(NOMINAL_R:identity_predicative
													(NOMINAL_L:identity_predicative
														(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "May")
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[f]:(?[n]:(name(n) & (arg1_of(f)=n) & (arg2(n)="Fair Trade Day")) & ?[m]:(month(m) & ?[n]:(name(n) & (arg1_of(m)=n) & (arg2(n)="May")) & ?[l]:((arg1(l)=f) & locate(l) & present(l) & (arg2(l)=m))))};

: # Titan is the brightest moon orbiting Saturn.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Titan")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
							(THE "the")
							(NP':try_remove_correlated,require_predicative_existential,try_add_singular
								(NOMINAL_R:identity_predicative
									(NOMINAL_L:identity_predicative
										(ADJP_R:try_remove_genitive,try_remove_wh_minus,try_remove_measure,select_singleton_arg2_of_in_set_without_head_predicative,remove_right_conjunct_in_set_without_predicative,factor,require_left_greatest
											(ADJP_L:try_remove_is_adjunct
												(ADJ:require_no_correlator,remove_greatest,add_superlative "bright"/"brightest")
											)
										)
										(NOMINAL_R:try_add_singular,try_remove_correlated,select_singleton_arg2_of_in_set_without_head_predicative,select_right_conjunct_in_set,select_right_set_arg1_without_head_predicative,replace_predicative_universal_with_existential,has_arg2_in_set
											(NOMINAL_R:try_remove_genitive,remove_right_conjunct_in_set
												(NOMINAL_L:identity_predicative
													(N:require_no_correlator_predicative,select_predicate_in_set "moon"/"moon")
												)
											)
											(N_ADJUNCT:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_right_conjunct_in_set,remove_wide_scope,try_remove_number
												(VP_R:select_right_arg1_of_without_head,require_no_future,require_no_perfect,remove_present_progressive,add_present_participle,require_no_predicate_empty,has_arg2
													(VP_R:remove_right_conjunct
														(VP_L:identity
															(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "orbit"/"orbiting")
														)
													)
													(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
														(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
															(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
																(NOMINAL_R:identity_predicative
																	(NOMINAL_L:identity_predicative
																		(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Saturn")
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[t]:(?[n]:(name(n) & (arg1_of(t)=n) & (arg2(n)="Titan")) & ?[s]:(?[n]:(name(n) & (arg1_of(s)=n) & (arg2(n)="Saturn")) & ?[X]:((X=^[x]:(moon(x) & ?[o]:(orbit(o) & present_progressive(o) & (arg2(o)=s) & (arg1_of(x)=o)))) & ?[y]:(?[g]:(greatest(brightness)(g) & (arg1(g)=X) & (arg2_of(y)=g)) & ?[z]:((arg1(z)=t) & same(z) & present(z) & (arg2(z)=y))))))};

: # Titan is the brightest moon that orbits Saturn.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Titan")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
							(THE "the")
							(NP':try_remove_correlated,require_predicative_existential,try_add_singular
								(NOMINAL_R:identity_predicative
									(NOMINAL_L:identity_predicative
										(ADJP_R:try_remove_genitive,try_remove_wh_minus,try_remove_measure,select_singleton_arg2_of_in_set_without_head_predicative,remove_right_conjunct_in_set_without_predicative,factor,require_left_greatest
											(ADJP_L:try_remove_is_adjunct
												(ADJ:require_no_correlator,remove_greatest,add_superlative "bright"/"brightest")
											)
										)
										(NOMINAL_R:try_add_singular,try_remove_correlated,select_singleton_arg2_of_in_set_without_head_predicative,select_right_conjunct_in_set,select_right_set_arg1_without_head_predicative,replace_predicative_universal_with_existential,has_arg2_in_set
											(NOMINAL_R:try_remove_genitive,remove_right_conjunct_in_set
												(NOMINAL_L:identity_predicative
													(N:require_no_correlator_predicative,select_predicate_in_set "moon"/"moon")
												)
											)
											(N_ADJUNCT:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_right_conjunct_in_set,remove_wide_scope,try_remove_number
												(S':select_right_arg1_of_without_head,add_that,add_nullable_subject
													(THAT "that")
													(S':try_remove_correlated,try_remove_is_adjunct,remove_that
														(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
															(VP_R:remove_nullable_subject,require_no_predicate_empty,has_arg2
																(VP_R:remove_right_conjunct
																	(VP_L:identity
																		(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "orbit"/"orbits")
																	)
																)
																(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
																	(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
																		(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
																			(NOMINAL_R:identity_predicative
																				(NOMINAL_L:identity_predicative
																					(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Saturn")
																				)
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[t]:(?[n]:(name(n) & (arg1_of(t)=n) & (arg2(n)="Titan")) & ?[s]:(?[n]:(name(n) & (arg1_of(s)=n) & (arg2(n)="Saturn")) & ?[X]:((X=^[x]:(moon(x) & ?[o]:(orbit(o) & present(o) & (arg2(o)=s) & (arg1_of(x)=o)))) & ?[y]:(?[g]:(greatest(brightness)(g) & (arg1(g)=X) & (arg2_of(y)=g)) & ?[z]:((arg1(z)=t) & same(z) & present(z) & (arg2(z)=y))))))};

: # What is the brightest moon orbiting Saturn?
{(S
	(S':require_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(PRO:try_remove_adv
						(WHAT:require_no_wh_minus,require_predicate_of_lambda "what")
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
							(THE "the")
							(NP':try_remove_correlated,require_predicative_existential,try_add_singular
								(NOMINAL_R:identity_predicative
									(NOMINAL_L:identity_predicative
										(ADJP_R:try_remove_genitive,try_remove_wh_minus,try_remove_measure,select_singleton_arg2_of_in_set_without_head_predicative,remove_right_conjunct_in_set_without_predicative,factor,require_left_greatest
											(ADJP_L:try_remove_is_adjunct
												(ADJ:require_no_correlator,remove_greatest,add_superlative "bright"/"brightest")
											)
										)
										(NOMINAL_R:try_add_singular,try_remove_correlated,select_singleton_arg2_of_in_set_without_head_predicative,select_right_conjunct_in_set,select_right_set_arg1_without_head_predicative,replace_predicative_universal_with_existential,has_arg2_in_set
											(NOMINAL_R:try_remove_genitive,remove_right_conjunct_in_set
												(NOMINAL_L:identity_predicative
													(N:require_no_correlator_predicative,select_predicate_in_set "moon"/"moon")
												)
											)
											(N_ADJUNCT:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_right_conjunct_in_set,remove_wide_scope,try_remove_number
												(VP_R:select_right_arg1_of_without_head,require_no_future,require_no_perfect,remove_present_progressive,add_present_participle,require_no_predicate_empty,has_arg2
													(VP_R:remove_right_conjunct
														(VP_L:identity
															(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "orbit"/"orbiting")
														)
													)
													(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
														(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
															(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
																(NOMINAL_R:identity_predicative
																	(NOMINAL_L:identity_predicative
																		(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Saturn")
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(QUESTION "?")
)}
	{^[q]:?[s]:(?[n]:(name(n) & (arg1_of(s)=n) & (arg2(n)="Saturn")) & ?[X]:((X=^[x]:(moon(x) & ?[o]:(orbit(o) & present_progressive(o) & (arg2(o)=s) & (arg1_of(x)=o)))) & ?[y]:(?[g]:(greatest(brightness)(g) & (arg1(g)=X) & (arg2_of(y)=g)) & ?[z]:((arg1(z)=q) & same(z) & present(z) & (arg2(z)=y)))))};

: # border
{(V "border"/"borders")}
	{?[b]:(border(b) & present(b))[index:sg,arg2]};

: # largest
{(ADJ "large"/"largest")}
	{?[g]:area(g)[sup]};

: # largest
{(ADJ "large"/"largest")}
	{?[g]:area(g)[sup]};

: # largest
{(ADJ "large"/"largest")}
	{?[g]:population(g)[sup]};

: # longest
{(ADJ "long"/"longest")}
	{?[g]:length(g)[sup]};

: # highest
{(ADJ "high"/"highest")}
	{?[g]:height(g)[sup]};

: # tallest
{(ADJ "tall"/"tallest")}
	{?[g]:height(g)[sup]};

: # Galileo observed Jupiter with a telescope.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Galileo")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_R:remove_right_conjunct
						(VP_L:identity
							(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "observe"/"observed")
						)
					)
					(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
						(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
							(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
								(NOMINAL_R:identity_predicative
									(NOMINAL_L:identity_predicative
										(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Jupiter")
									)
								)
							)
						)
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(PP:remove_wide_scope,add_is_adjunct,add_modifies_event,require_no_predicate_same,select_right_arg1_of_without_head
						(P:require_no_preposition,remove_right_conjunct "with")
						(NP:try_remove_correlated,try_remove_is_adjunct,try_remove_modifies_event,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
							(A "a")
							(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_no_constant_in_set
								(NOMINAL_R:identity_predicative
									(NOMINAL_L:identity_predicative
										(N:require_no_correlator_predicative,select_predicate_in_set "telescope"/"telescope")
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[j]:(?[n]:(name(n) & (arg1_of(j)=n) & (arg2(n)="Jupiter")) & ?[t]:(telescope(t) & ?[g]:(?[n]:(name(n) & (arg1_of(g)=n) & (arg2(n)="Galileo")) & ?[o]:((arg1(o)=g) & observe(o) & past(o) & (arg2(o)=j) & ?[u]:(use_instrument(u) & (arg2(u)=t) & (arg1_of(o)=u))))))};

: # Galileo observed Jupiter with four moons.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
						(NOMINAL_R:identity_predicative
							(NOMINAL_L:identity_predicative
								(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Galileo")
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "observe"/"observed")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
							(NOMINAL_R:identity_predicative
								(NOMINAL_R:try_remove_genitive,remove_right_conjunct_in_set
									(NOMINAL_L:identity_predicative
										(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Jupiter")
									)
								)
								(N_ADJUNCT:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_right_conjunct_in_set,remove_wide_scope,try_remove_number
									(PP:try_remove_correlated,select_right_arg1_of_without_head
										(P:require_no_preposition,remove_right_conjunct "with")
										(NP:try_remove_correlated,try_remove_is_adjunct,try_remove_modifies_event,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
											(NP':try_add_plural,try_remove_adv,require_no_correlator_predicative,require_predicative_universal
												(Q:try_remove_genitive,select_second_left_set_conjunct_root,size
													(NUMBER:identity_root "four")
												)
												(NOMINAL_R:try_remove_correlated,remove_second_left_set_conjunct,replace_predicative_subset_with_equality
													(NOMINAL_L:identity_predicative
														(N:require_no_correlator_predicative,select_predicate_in_set "moon"/"moons")
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[M]:(subset(M,^[m]:moon(m)) & (size(M)=4) & ?[j]:(?[n]:(name(n) & (arg1_of(j)=n) & (arg2(n)="Jupiter")) & ![m]:(M(m) => ?[o]:(own(o) & (arg2(o)=m) & (arg1_of(j)=o))) & ?[g]:(?[n]:(name(n) & (arg1_of(g)=n) & (arg2(n)="Galileo")) & ?[o]:((arg1(o)=g) & observe(o) & past(o) & (arg2(o)=j)))))};

: # butterfly
{(N "butterfly"/"butterfly")}
	{butterfly[index:sg]};

: # net
{(N "net"/"net")}
	{net[index:sg]};

: # spot
{(N "spot"/"spot")}
	{spot[index:sg]};

: # catch
{(V "catch"/"catches")}
	{?[c]:(catch(c) & present(c))[index:sg,arg2]};

: # person
{(N "person"/"person")}
	{person[index:sg]};

: # use
{(V "use"/"uses")}
	{?[u]:(use_instrument(u) & present(u))[index:sg,arg2]};

: # have
{(V "have"/"has")}
	{?[o]:(own(o) & present(o))[index:sg,arg2]};

: # point
{(N "point"/"point")}
	{location[index:sg]};

: # mile
{(N "mile"/"mile")}
	{mile[index:sg,measure]};

: # square
{(ADJ "square"/"square")}
	{?[x]:square(x)};

: # The volume of Deimos is 999.78 cubic kilometers.
{(S
	(S':require_no_lambda,mark_wide_scope
		(S'':add_singular,require_no_conjunction,try_remove_is_adjunct
			(V_ADJUNCT:try_remove_nullable_subject,require_no_subordinate,try_remove_correlator,try_remove_wh_minus,select_left_conjunct
				(NP:require_no_preposition,require_no_inverse,try_remove_req_subject,select_right_arg1_without_head_predicative,factor_predicative,has_arg2_in_set
					(DEF_NP:try_remove_adv,require_no_correlator_predicative,require_no_wh_minus
						(THE "the")
						(NP':try_remove_correlated,require_predicative_existential,try_add_singular
							(NOMINAL_R:identity_predicative
								(NOMINAL_R:try_remove_genitive,select_singleton_arg2_of_in_set_without_head_predicative,remove_right_conjunct_in_set,try_add_has_arg2
									(NOMINAL_L:identity_predicative
										(N:require_no_correlator_predicative,select_predicate_in_set "volume")
									)
								)
								(OF_FOR "of")
								(NP:try_remove_correlated,try_remove_wh_minus,try_remove_measure,select_singleton_arg2_of_in_set_without_head_predicative,select_right_conjunct_in_set,select_right_arg1_without_head_predicative,try_remove_number,has_arg2_in_set
									(NP':try_add_singular,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_name_in_set
										(NOMINAL_R:identity_predicative
											(NOMINAL_L:identity_predicative
												(STRING:require_no_correlator_predicative,require_no_measure,require_predicative_existential,select_name_in_set,require_capitalized "Deimos")
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(VP_R:try_remove_nullable_subject,try_remove_correlated,remove_left_conjunct,require_no_predicate_empty,has_arg2
				(VP_R:remove_right_conjunct
					(VP_L:identity
						(V:require_no_empty_ref,require_no_future,require_no_perfect,require_no_progressive,require_no_inverse,require_no_req_subject,require_no_req_aux,require_no_to_infinitive,require_no_correlator,predicate_and_tense "be"/"is")
					)
				)
				(V_ADJUNCT:select_right_conjunct,try_remove_correlated,try_remove_correlator,try_remove_wh_minus,try_remove_number
					(NP:require_no_preposition,require_no_inverse,require_no_left_predicate_exist,select_right_arg2_without_head_predicative,factor_predicative,has_arg2_in_set
						(Q:try_add_plural,try_remove_adv,require_no_correlator_predicative,require_predicative_existential,require_measure_in_set,select_second_left_conjunct_in_set,right_arg1
							(NUMBER:identity_root "999 . 78")
						)
						(NOMINAL_R:add_measure,try_add_plural,try_remove_adv,try_remove_correlated,select_right_conjunct_in_set,select_right_arg2_without_head_predicative,require_predicative_existential
							(NOMINAL_L:identity_predicative
								(ADJP_R:try_remove_genitive,try_remove_wh_minus,try_remove_measure,select_left_conjunct_in_set,select_right_arg1_of_without_head
									(ADJP_L:try_remove_is_adjunct
										(ADJ:require_no_correlator "cubic"/"cubic")
									)
								)
								(NOMINAL_L:try_remove_correlated,remove_left_conjunct_in_set
									(N:require_no_correlator_predicative,select_predicate_in_set "kilometer"/"kilometers")
								)
							)
						)
					)
				)
			)
		)
	)
	(PERIOD ".")
)}
	{?[y]:(?[d]:(?[n]:(name(n) & (arg1_of(d)=n) & (arg2(n)="Deimos")) & ?[p]:(volume(p) & (arg1(p)=d) & (arg2_of(y)=p))) & ?[x]:(?[l]:(cubic(l) & (arg1_of(x)=l)) & kilometer(x) & ?[q]:(measure(q) & (arg1(q)=999.78) & (arg2(q)=x) & ?[s]:((arg1(s)=y) & same(s) & present(s) & (arg2(s)=q)))))};

#: 4 cats sleep.
#	{?[X]:(subset(X,^[x]:(U(0,x) & cat(x))) & size(X)=4 & ![x]:(X(x) => ?[s]:(arg1(s)=x & U(1,s) & sleep(s) & present(s))))};

#: 4 cats slept.
#	{?[X]:(subset(X,^[x]:(U(0,x) & cat(x))) & size(X)=4 & ![x]:(X(x) => ?[s]:(arg1(s)=x & U(1,s) & sleep(s) & past(s))))};

#: 4 cats will have been sleeping.
#	{?[X]:(subset(X,^[x]:(U(0,x) & cat(x))) & size(X)=4 & ![x]:(X(x) => ?[s]:(arg1(s)=x & U(1,s) & sleep(s) & future_perfect_progressive(s))))};

# >> There are 7.7 billion people.
#	{?[P]:(P=^[x]:(U(0,x) & person(x)) & size(P)=7700000000)}
#
# >> There are 7,700,000,000 people.
#	{?[P]:(P=^[x]:(U(0,x) & person(x)) & size(P)=7700000000)}
#
# >> All cats are mammals.
#	{![x]:(U(0,x) & cat(x) => ?[t]:(type(t) & present(t) & arg2(t)=mammal & arg1(t)=x))}
#
# >> Every cat is a mammal.
#	{![x]:(U(0,x) & cat(x) => ?[t]:(type(t) & present(t) & arg2(t)=mammal & arg1(t)=x))}
#
# >> Every farmer who owns a donkey beats it.
#	{![f]:(U(0,f) & farmer(f) & ?[d]:(U(0,d) & donkey(d) & ?[o]:(own(o) & present(o) & arg1(o)=f & arg2(o)=d)) => ?[i]:(U(0,i) & ref(i) & ?[b]:(arg1(b)=f & beat(b) & present(b) & arg2(b)=i)))}
#
# >> It was Jessie Bear's birthday.
#	{?[i]:(U(0,i) & ref(i) & ?[b]:(arg1(b)=jessie & birthday(b) & past(b) & arg2(b)=i))}
#	{i=today}
#
#	She was having a party.
#	{?[s]:(U(0,s) & female_ref(0,s) & ?[h]:(arg1(h)=s & have(h) & present_progressive(h) & ?[p]:(U(1,p) & party(p) & arg2(h)=p))}
#	{s=jessie}
#
#	She asked her two best friends to come to the party.
#	{?[s]:(U(0,s) & female_ref(0,s) & ?[h]:(U(1,h) & female_ref(1,h) & ?[B]:(B=^[x]:(U(2,x) & ?[b]:(arg1(b)=h & best_friend(b) & arg2(b)=x)) & size(B)=2 & ![x]:(B(x) => ?[a]:(arg1(a)=s & ask(a) & past(a) & ?[g]:(go(g) & arg2(a)=g & ?[p]:(U(3,p) & party(p) & arg2(g)=p)))))))}
#	{s=jessie,h=jessie}
#
#	She made a big cake, and hung up some balloons.
#	{?[s]:(U(0,s) & female_ref(0,s) & ?[m]:(arg1(m)=s & make(m) & past(m) & ?[c]:(U(1,c) & cake(c) & ?[b]:(is_big(b) & arg1(b)=c) & arg2(m)=c)) & ?[B]:(subset(B,^[b]:(U(2,b) & balloon(b))) & ![b]:(B(b) => ?[h]:(arg1(h)=s & hang(h) & past(h) & arg2(h)=b))))}
#	{s=jessie}
#
#	Soon her friend Lion came over.
#	{?[h]:(U(0,h) & female_ref(0,h) & ?[f]:(friend(f) & arg1(f)=h & arg2(f)=lion)) & ?[c]:(soon(c) & arg1(c)=lion & come_over(c) & past(c))}
#	#  [OR]
#	# {?[l]:(l=lion & ?[h]:(U(0,h) & female_ref(0,h) & ?[f]:(friend(f) & arg1(f)=h & arg2(f)=l)) & ?[c]:(soon(c) & arg1(c)=l & come_over(c) & past(c)))}
#	{h=jessie}
#
#	Then her friend Tiger came over.
#	{?[h]:(U(0,h) & female_ref(0,h) & ?[f]:(friend(f) & arg1(f)=h & arg2(f)=tiger)) & ?[c]:(then(c) & arg1(c)=tiger & come_over(c) & past(c))}
#	#  [OR]
#	# {?[t]:(t=tiger & ?[h]:(U(0,h) & female_ref(0,h) & ?[f]:(friend(f) & arg1(f)=h & arg2(f)=t)) & ?[c]:(then(c) & arg1(c)=t & come_over(c) & past(c)))}
#	{h=jessie}
#
#	Lion and Tiger brought presents with them.
#	# TODO: continue relabeling from here
#	{?[S]:(S=^[x]:(x=lion | x=tiger) & ![x]:(S(x) => ?[P]:(subset(P,^[p]:(present(p))) & ![p]:(P(p) => with(bring,x)(x,p)))))}
#
#	Jessie hugged her friends.
#	{(female(#1) & ?[F]:(subset(F,^[f]:(friend(f,#1)))) & ![f]:(F(f) => hug(jessie,f)))}
#	{#1=jessie}
#
#	She asked them if they would like to have cake.
#	{female(#1) & ![s]:(#2(s) => ask(#1,want(s,?[c]:(cake(c) & have(s,c)))))}
#	{#1=jessie}
#
#	Yes! said Lion.
#	{say(lion,T)}
#
#	Yes yes! said Tiger.
#	{say(tiger,T & T)}
#
#	Jessie cut the cake, and they all ate it together.
#	{?[c]:(cake(c) & cut(jessie,c)) & ![x]:(#1(x) => together(eat)(x,#2))}
#	{#1=^[y]:(y=jessie | y=lion | y=tiger)}
#
#	Then Jessie opened her presents.
#	{?[P]:(P=^[p]:(female(#1) & belongs(p,#1) & present(p)) & ![p]:(P(p) => then(open)(jessie,p)))}
#
#	She got a new jump rope and a fun game.
#	{female(#1) & ?[y]:(new(y) & jump_rope(y) & receive(#1,y)) & ?[y]:(fun(y) & game(y) & receive(#1,y))}
#	{#1=jessie}
#
#	She asked Lion and Tiger to play the game with her.
#	{female(#1) & ?[S]:(S=^[s]:(s=lion | s=tiger) & ![s]:(S(s) => ask(#1,![g]:(game(g) & with(play,#1)(s,g)))))}
#	{#1=jessie}
#
#	The friends played and played.
#	{?[F]:(clique(F,^[a,b]:friend(a,b)) & ![f]:(F(f) => play(f) & play(f)))}
#
#	They all had a good time.
#	{![s]:(#1(s) => happy(s))}
#	{#1=^[y]:(y=jessie | y=lion | y=tiger)}
#
#	Soon it was time for the party to be over.
#	{?[t]:(soon(t) & time(t) & ?[p]:(party(p) & t=end(p)))}
#
#	Lion and Tiger hugged Jessie and said goodbye to her.
#	{?[S]:(S=^[s]:(s=lion | s=tiger) & ![s]:(S(s) => hug(s,jessie) & ?[g]:(valediction(g) & to(say,#1)(s,g))))}
#	{#1=jessie}
#
#	Thanks for a great birthday! Jessie Bear told her two best friends.
#	{?[B]:(female(#1) & B=best_friends(#1) & size(B,2) & ![b]:(B(b) => to(say,b)(jessie,?[t]:(thanks(t) & ?[y]:(great(y) & birthday(y) & for(t,y))))))}
#	{#1=jessie}
#
# >> Who was having a birthday?
#	{^[x]:(today=birthday_of(x))}
#	{^[x]:(?[b]:(birthday(b) & have(x,b)))}
#
# >> Who didn't come to the party?
#	{^[x]:(?[p]:(party(p) & ~go(x,p)))}
#
# >> How did Jessie get ready for the party?
#	{?[p]:(party(p) & how(prepare,x)(jessie,p)))}
#
# >> How many friends came to Jessie's party?
#	{^[x]:(?[F]:(clique(F,^[a,b]:friend(a,b)) & size(F)=x & ?[p]:(have(jessie,p) & party(p) & ![f]:(F(f) => go(f,p)))))}
